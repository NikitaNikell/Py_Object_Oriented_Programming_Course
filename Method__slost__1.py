class PointSlots:
    """ прописывается как атрибут класса и накладывает ограничения на количество и
    имена разрешенных атрибутов экземпляров класса.
    При этом не затрагиваются атрибуты самого класса. """

    __slots__ = ('x', 'y')  # Перечисляем все возможные атрибуты экземпляров класса
    """ добавление новых атрибутов в экземпляр класса, кроме уже указанных, невозможно """

    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __str__(self):
        return f"В экземпляре класса хранятся следующие атрибуты {self.__slots__[0]} = {self.x}, {self.__slots__[1]} = {self.y}"


p2 = PointSlots(3, 4)

print(p2)

"""Таким образом использовать __slots__ важно в тех случаях, когда:
1) Есть необходимость в фиксированном количестве используемых имён переменных в объектах.
2) Необходимо ускорение работы программы.
3) Имеются ограничения по объему используемой памяти.
"""